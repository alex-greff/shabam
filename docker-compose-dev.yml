# Sets up the development environment
version: "3.2"
services:
  proxy:
    restart: always
    build:
      dockerfile: Dockerfile.dev
      context: ./proxy
    ports:
      - "3050:80"
    networks:
      - app-network
    hostname: proxy
    container_name: shabam_proxy
    logging:
      driver: none
    depends_on:
      - "api"
      - "client"
      - "fingerprint-worker"
      - "identification-worker"
  # Databases
  db-metadata:
    image: postgres
    restart: always
    volumes:
      - db_metadata_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=development
    hostname: db-metadata
    container_name: shabam_db-metadata
    shm_size: "64MB"
    networks:
      - app-network
  db-address-1:
    image: postgres
    restart: always
    volumes:
      - db_address_1_data:/var/lib/postgresql/data
    ports:
      - 5433:5432
    environment:
      - POSTGRES_PASSWORD=development
    hostname: db-address-1
    container_name: shabam_db-address-1
    shm_size: "64MB"
    networks:
      - app-network
  db-address-2:
    image: postgres
    restart: always
    volumes:
      - db_address_2_data:/var/lib/postgresql/data
    ports:
      - 5434:5432
    environment:
      - POSTGRES_PASSWORD=development
    hostname: db-address-2
    container_name: shabam_db-address-2
    shm_size: "64MB"
    networks:
      - app-network
  db-address-3:
    image: postgres
    restart: always
    volumes:
      - db_address_3_data:/var/lib/postgresql/data
    ports:
      - 5435:5432
    environment:
      - POSTGRES_PASSWORD=development
    hostname: db-address-3
    container_name: shabam_db-address-3
    shm_size: "64MB"
    networks:
      - app-network
  redis-session:
    image: redis
    restart: always
    command: redis-server --requirepass development
    volumes:
      - ./redis-session/redis.conf:/usr/local/etc/redis/redis.conf
    hostname: redis-session
    container_name: shabam_redis_session
    networks:
      - app-network
  api:
    build:
      dockerfile: Dockerfile.dev
      context: ./server
    volumes:
      - /app/node_modules
      - ./server:/app
      - .:/workspace:cached # For vscode dev container
    environment:
      # Metadata DB
      - "PG_METADATA_HOST=db-metadata"
      - "PG_METADATA_DATABASE=postgres"
      - "PG_METADATA_USER=postgres"
      - "PG_METADATA_PORT=5432"
      - "PG_METADATA_PASSWORD=development"
      # Redis
      - "REDIS_SESSION_HOST=redis-session"
      - "REDIS_SESSION_PORT=6379"
      - "REDIS_SESSION_PASSWORD=development"
      # Other
      - "SESSION_SECRET=my-big-secret"
      - "PORT=5000"
      - "JWT_SECRET=my-big-secret"
    networks:
      - app-network
    hostname: api
    container_name: shabam_api
    depends_on:
      - "db-metadata"
      - "fingerprint-worker"
      - "identification-worker"
      - "records-worker"
  client:
    build:
      dockerfile: Dockerfile.dev
      context: ./client
    volumes:
      - /app/node_modules
      - ./client:/app
      - client_emscripten_cache:/emsdk_portable/.emscripten_cache
      - .:/workspace:cached # For vscode dev container
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_GRAPHQL_API_ENDPOINT=/api/graphql
    networks:
      - app-network
    privileged: true
    stdin_open: true
    container_name: shabam_client
    depends_on:
      - "api"
  fingerprint-worker:
    build:
      dockerfile: Dockerfile.dev
      context: ./fingerprint_worker
    volumes:
      - /app/node_modules
      - ./fingerprint_worker:/app
    networks:
      - app-network
    hostname: fingerprint-worker
    container_name: shabam_fingerprint_worker
  identification-worker:
    build:
      dockerfile: Dockerfile.dev
      context: ./identification_worker
    volumes:
      - /app/node_modules
      - ./identification_worker:/app
    networks:
      - app-network
    hostname: identification-worker
    container_name: shabam_identification_worker
  records-worker:
    build:
      dockerfile: Dockerfile.dev
      context: ./records_worker
    volumes:
      - /app/node_modules
      - ./records_worker:/app
      - .:/workspace:cached # For vscode dev container
    environment:
      # Address 1 DB
      - "PG_ADDRESS_1_HOST=db-address-1"
      - "PG_ADDRESS_1_DATABASE=postgres"
      - "PG_ADDRESS_1_USER=postgres"
      - "PG_ADDRESS_1_PORT=5433"
      - "PG_ADDRESS_1_PASSWORD=development"
      # Address 2 DB
      - "PG_ADDRESS_2_HOST=db-address-2"
      - "PG_ADDRESS_2_DATABASE=postgres"
      - "PG_ADDRESS_2_USER=postgres"
      - "PG_ADDRESS_2_PORT=5434"
      - "PG_ADDRESS_2_PASSWORD=development"
      # Address 3 DB
      - "PG_ADDRESS_3_HOST=db-address-3"
      - "PG_ADDRESS_3_DATABASE=postgres"
      - "PG_ADDRESS_3_USER=postgres"
      - "PG_ADDRESS_3_PORT=5435"
      - "PG_ADDRESS_3_PASSWORD=development"
      # Misc
      - "ADDRESS_DB_COUNT=3"
    networks:
      - app-network
    hostname: records-worker
    container_name: shabam_records_worker
  # Graphical tools
  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    hostname: adminer
    container_name: shabam_adminer
    logging:
      driver: none
    networks:
      - app-network
    depends_on:
      - db-metadata
      - db-address-1
      - db-address-2
      - db-address-3
  redis-commander:
    image: rediscommander/redis-commander:latest
    restart: always
    ports:
      - "8081:8081"
    hostname: redis-commander
    container_name: shabam_redis_commander
    logging:
      driver: none
    environment:
      - REDIS_HOSTS=redis-session:redis-session:6379:0:development
    networks:
      - app-network
    depends_on:
      - redis-session
networks:
  app-network:
volumes:
  db_metadata_data:
  db_address_1_data:
  db_address_2_data:
  db_address_3_data:
  client_emscripten_cache:
