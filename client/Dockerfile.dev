FROM trzeci/emscripten:sdk-tag-1.39.4-64bit as emscripten_base

FROM ubuntu:16.04

# Copy pre-compiled content of Emscripten SDK to target iamge
COPY --from=emscripten_base /emsdk_portable /emsdk_portable

# Setup Emscripten Environment variables
ENV EMSDK /emsdk_portable
ENV EMSCRIPTEN=${EMSDK}/emscripten/sdk

ENV EM_DATA ${EMSDK}/.data
ENV EM_CONFIG ${EMSDK}/.emscripten
ENV EM_CACHE ${EM_DATA}/cache
ENV EM_PORTS ${EM_DATA}/ports

# Expose tools to system PATH
# (NOTE: the node path that is installed with emscripten is excluded b/c it is version 8 and overrided the other node installation)
ENV PATH="${EMSDK}:${EMSDK}/emscripten/sdk:${EMSDK}/llvm/clang/bin:${EMSDK}/binaryen/bin:${PATH}"

WORKDIR /

# Install apt-add-repository
RUN apt-get update && \
    apt-get install -y software-properties-common

# Install required packages
RUN add-apt-repository ppa:ubuntu-toolchain-r/test && \
    apt-get update && \
    apt-get install -y bash curl git build-essential libstdc++6 python python-pip ca-certificates && \
    apt-get upgrade -y libstdc++6 && \
    curl -sL https://deb.nodesource.com/setup_14.x | bash - && \
    apt-get install -y nodejs

# Install the client    
WORKDIR /app

# Workaround to get prepare scripts to run properly
# Source: https://github.com/npm/npm/issues/18163
RUN npm config set unsafe-perm true

# Install global packages
RUN npm install -g gulp-cli eslint prettier 

COPY ./package*.json ./

# Install npm dependencies, cleaning the cache beforehand
RUN npm install

# Copy all the client files
COPY . .

# Start dev server
CMD ["npm", "run", "start:dev"]