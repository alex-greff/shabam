# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""An artist collaboration."""
type ArtistCollaboration {
  name: String!
  type: CollaborationType!
}

enum CollaborationType {
  PRIMARY
  FEATURED
  REMIX
}

"""Credentials object for users."""
type AccessCredentials {
  """JWT access token."""
  access_token: String!
}

"""Metadata for a track."""
type TrackMetadata {
  title: String!
  artists: [ArtistCollaboration!]!
  coverImage: String
  duration: Int!
  numPlays: Int!
  releaseDate: Date
  createdDate: Date!
  updatedDate: Date!
}

"""Date scalar type"""
scalar Date

"""A track object."""
type Track {
  id: Int!
  addressDatabase: Int!
  metadata: TrackMetadata!
}

"""Search result for an audio search. """
type SearchResult {
  something: String!
}

type Query {
  """Checks if the given username is available. """
  checkUsernameAvailability(username: String!): Boolean!

  """Get a specific track in the catalog."""
  getTrack(id: Int!): Track!

  """Get a paginated list of all tracks in the catalog."""
  getTracks(offset: Int = 0, limit: Int = 25, filter: TracksFilterInput): [Track!]!

  """Gives how many tracks are in the result for the given filter query"""
  getTracksNum(filter: TracksFilterInput): Int!
}

input TracksFilterInput {
  uploader: String
}

type Mutation {
  """Login a user, creating a session."""
  login(userData: UserDataInput!): AccessCredentials!

  """Logout the current user, destroying the session."""
  logout: Boolean!

  """Signup and create a new user. """
  signup(userData: UserDataInput!): AccessCredentials!

  """Edits a user's account details."""
  editUser(updatedCredentials: UpdateUserCredentialsInput!, username: String!): Boolean!

  """Edits a user's role."""
  editUserRole(updatedRole: UserRole!, username: String!): Boolean!

  """Deletes a user account."""
  removeUser(username: String!): Boolean!

  """Add a new track to the catalog."""
  addTrack(trackData: TrackAddDataInput!): Track!

  """Edit an existing track in the catalog."""
  editTrack(trackData: TrackEditDataInput!, id: Int!): Track!

  """Remove a track from the catalog."""
  removeTrack(id: Int!): Boolean!

  """Recomputes a track's stored fingerprint."""
  recomputeTrackFingerprint(
    """Fingerprint data."""
    fingerprint: FingerprintInput!
    id: ID!
  ): Boolean!

  """Search for a track."""
  search(
    """Fingerprint data."""
    fingerprint: FingerprintInput!
  ): SearchResult!
}

"""Credentials input for user login"""
input UserDataInput {
  """The username of the user."""
  username: String!

  """The password (in clear) of the user. """
  password: String!
}

"""Credentials input for updating a user account."""
input UpdateUserCredentialsInput {
  """The username of the user."""
  username: String

  """The password (in clear) of the user."""
  password: String
}

enum UserRole {
  Admin
  Distributor
  Default
}

"""Input data for adding a new track."""
input TrackAddDataInput {
  title: String!
  artists: [ArtistInput!]!
  releaseDate: Date
  fingerprint: FingerprintInput!
  duration: Int!
  coverArt: Upload
}

"""An artist input."""
input ArtistInput {
  name: String!
  type: CollaborationType!
}

"""Input data for searching. """
input FingerprintInput {
  numberOfWindows: Int!
  numberOfPartitions: Int!
  fingerprintData: Upload!
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

"""Input data for editing a track."""
input TrackEditDataInput {
  title: String
  artists: [String!]
  coverImage: String
  releaseDate: Date
}

type Subscription {
  """Notifies whenever a track is added. """
  trackAdded: Track!

  """Notifies whenever a track is added. Can filter by track id."""
  trackEdited: Track!

  """Notifies whenever a track is deleted. Can filter by track id."""
  trackRemoved: String!
}
