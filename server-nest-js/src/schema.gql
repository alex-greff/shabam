# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""Metadata for a track."""
type TrackMetadata {
  title: String!
  artists: [String!]!
  coverImage: String
  releaseDate: Date
  createdDate: Date!
  updatedDate: Date!
}

"""Date scalar type"""
scalar Date

"""A track object."""
type Track {
  id: ID!
  addressDatabase: Int!
  metadata: TrackMetadata!
}

type Recipe {
  id: ID!
  title: String!
  description: String
  creationDate: Date!
  ingredients: [String!]!
}

type Query {
  """Get a specific track in the catalog."""
  getTrack(id: ID!): Track!

  """Get a paginated list of all tracks in the catalog."""
  getTracks(skip: Int = 0, take: Int = 25): [Track!]!

  """Searches for a track based off the given audio fingerprint."""
  searchTrack(fingerprintInfo: FingerprintInfoInput!, fingerprint: Upload!): Track!
  recipe(id: String!): Recipe!
  recipes(skip: Int = 0, take: Int = 25): [Recipe!]!
}

"""Supporting information for the raw fingerprint data."""
input FingerprintInfoInput {
  windowAmount: Int!
  partitionAmount: Int!
}

"""File upload scalar type"""
scalar Upload

type Mutation {
  """Add a new track to the catalog."""
  addTrack(trackData: TrackAddDataInput!): Track!

  """Edit an existing track in the catalog."""
  editTrack(trackData: TrackEditDataInput!, id: ID!): Track!

  """Remove a track from the catalog."""
  removeTrack(id: ID!): Boolean!

  """Recomputes a track's stored fingerprint."""
  recomputeTrackFingerprint(fingerprintInfo: FingerprintInfoInput!, fingerprint: Upload!, id: ID!): Boolean!
  addRecipe(newRecipeData: NewRecipeInput!): Recipe!
  removeRecipe(id: String!): Boolean!
}

"""Input data for adding a new track."""
input TrackAddDataInput {
  title: String!
  artists: [String!]!
  coverImage: String
  releaseDate: Date
}

"""Input data for editing a track."""
input TrackEditDataInput {
  title: String
  artists: [String!]
  coverImage: String
  releaseDate: Date
}

input NewRecipeInput {
  title: String!
  description: String
  ingredients: [String!]!
}

type Subscription {
  """Notifies whenever a track is added. """
  trackAdded: Track!

  """Notifies whenever a track is added. Can filter by track id."""
  trackEdited: Track!

  """Notifies whenever a track is deleted. Can filter by track id."""
  trackRemoved: String!
  recipeAdded: Recipe!
}
