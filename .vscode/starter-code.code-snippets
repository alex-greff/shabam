{
	// Place your shabam workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Functional Component Starter Code with Props": {
		"scope": "typescriptreact",
		"prefix": "starter-code-fp",
		"body": [
			"import React, { FunctionComponent } from \"react\";",
			"import \"./$TM_FILENAME_BASE.scss\";",
			"",
			"type Props = {",
			"",
			"};",
			"",
			"const $TM_FILENAME_BASE: FunctionComponent<Props> = (props) => {",
			"    return (",
			"        <div className=\"$TM_FILENAME_BASE\">",
			"            $1",
			"        </div>",
			"    );",
			"};",
			"",
			"$TM_FILENAME_BASE.defaultProps = {",
			"",
			"} as Partial<Props>;",
			"",
			"export default $TM_FILENAME_BASE;",
		],
		"description": "The starter code for a functional component with props"
	},
	"Functional Component Starter Code without Props": {
		"scope": "typescriptreact",
		"prefix": "starter-code-f",
		"body": [
			"import React, { FunctionComponent } from \"react\";",
			"import \"./$TM_FILENAME_BASE.scss\";",
			"",
			"const $TM_FILENAME_BASE: FunctionComponent<{}> = () => {",
			"    return (",
			"        <div className=\"$TM_FILENAME_BASE\">",
			"            $1",
			"        </div>",
			"    );",
			"};",
			"",
			"export default $TM_FILENAME_BASE;",
		],
		"description": "The starter code for a functional component without props"
	},
	"Class Component Starter Code with Props and State": {
		"scope": "typescriptreact",
		"prefix": "starter-code-cps",
		"body": [
			"import React, { Component } from \"react\";",
			"import \"./$TM_FILENAME_BASE.scss\";",
			"",
			"type Props = {",
			"",
			"};",
			"",
			"type State = {",
			"",
			"};",
			"",
			"class $TM_FILENAME_BASE extends Component<Props, State> {",
			"    static defaultProps = {",
			"",
			"    } as Partial<Props>;",
			"",
			"    constructor(props: Props) {",
			"       super(props);",
			"    }",
			"",
			"    render() {",
			"        return (",
			"            <div className=\"$TM_FILENAME_BASE\">",
			"                $1",
			"            </div>",
			"        );",
			"    }",
			"}",
			"",
			"export default $TM_FILENAME_BASE;",
		],
		"description": "The starter code for a class component with props and state"
	},
	"Class Component Starter Code with Props": {
		"scope": "typescriptreact",
		"prefix": "starter-code-cp",
		"body": [
			"import React, { Component } from \"react\";",
			"import \"./$TM_FILENAME_BASE.scss\";",
			"",
			"type Props = {",
			"",
			"};",
			"",
			"class $TM_FILENAME_BASE extends Component<Props, any> {",
			"    static defaultProps = {",
			"",
			"    } as Partial<Props>;",
			"",
			"    render() {",
			"        return (",
			"            <div className=\"$TM_FILENAME_BASE\">",
			"                $1",
			"            </div>",
			"        );",
			"    }",
			"}",
			"",
			"export default $TM_FILENAME_BASE;",
		],
		"description": "The starter code for a class component with only props"
	},
	"Class Component Starter Code with State": {
		"scope": "typescriptreact",
		"prefix": "starter-code-cs",
		"body": [
			"import React, { Component } from \"react\";",
			"import \"./$TM_FILENAME_BASE.scss\";",
			"",
			"type State = {",
			"",
			"};",
			"",
			"class $TM_FILENAME_BASE extends Component<any, State> {",
			"    constructor(props) {",
			"       super(props);",
			"    }",
			"",
			"    render() {",
			"        return (",
			"            <div className=\"$TM_FILENAME_BASE\">",
			"                $1",
			"            </div>",
			"        );",
			"    }",
			"}",
			"",
			"export default $TM_FILENAME_BASE;",
		],
		"description": "The starter code for a class component with only state"
	},
	"SCSS Starter Code": {
		"scope": "scss",
		"prefix": "starter-code",
		"body": [
			".$TM_FILENAME_BASE {",
			"",
			"}"
		],
		"description": "The starter code for the SCSS part of a component"
	}
}